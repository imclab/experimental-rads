library(Rmaps)
library(maps)
library(mapdata)
wd = "C:\\Users\\sarah\\Documents\\GitHub\\experimental-rads"
#wd = "/Users/sarah/Desktop/WE_Dropbox_stuff/ExperimentalMacroecology/"
setwd(wd)
sites = read.csv("sites_analysis_data.csv", na.strings = 'NULL')
head(sites)
library(maptools)
library(scales)
map("worldHires","Canada", xlim=c(-140,-110),ylim=c(48,64), col="gray90", fill=TRUE)  #plot the region of Canada I want
map("worldHires","Canada", col="gray90", fill=TRUE)  #plot the region of Canada I want
map("worldHires","usa", col="gray90", fill=TRUE)  #plot the region of Canada I want
map("worldHires","world", col="gray90", fill=TRUE)  #plot the region of Canada I want
map("worldHires", col="gray90", fill=TRUE)  #plot the region of Canada I want
xlim=c(-140,-110),ylim=c(48,64),
map("worldHires","Canada", xlim=c(-140,-110), ylim=c(48,64), col="gray90", fill=TRUE)  #plot the region of Canada I want
library(Rgooglemaps)
library(RgoogleMaps)
head(sites)
lat = sites$latitude
lon = sites$longitude
length(lat)
length(lon)
lat_lims = c(min(lat), max(lat))
lon_lims = c(min(lon), max(lon))
head(lat)
min(lat)
lat = as.numeric(sites$latitude)
lon = as.numeric(sites$longitude)
lat_lims = c(min(lat), max(lat))
lon_lims = c(min(lon), max(lon))
min(lat_lims)
max(lat_lims)
lat_lims
lon_lims
min(lat)
head(lat)
head(lon)
head(sites)
is.numeric(sites$latitude)
library(ggplot2)
map("world")
points(sites$latitude, sites$longitude)
points(sites$latitude, sites$longitude, col = "red")
map("world", border = NA)
axis(side = 1)
axis(side = 2)
class(sites$latitude)
class(lat)
points(lat, lon, col = "red")
max(lat)
max(lon)
lat
lon
lat = as.numeric(sites$latitude)
lon = as.numeric(sites$longitude)
sites$latitude
sites = read.csv("sites_analysis_data.csv", na.strings = 'NULL', colClasses = "character")
lat = as.numeric(sites$latitude)
lon = as.numeric(sites$longitude)
lat
lon
map("world", border = NA)
axis(side = 1)
axis(side = 2)
points(lat, lon, col = "red")
points(lon, lat, col = "red")
map("world", border = NA)
axis(side = 1)
axis(side = 2)
points(lon, lat, col = "red", pch = 19)
map("world2", border = NA)
axis(side = 1)
axis(side = 2)
points(lon, lat, col = "red", pch = 19)
points(lon, lat, col = "red", pch = 19)
map("world", border = NA)
axis(side = 1)
axis(side = 2)
points(lon, lat, col = "red", pch = 19)
library(ggplot2)
library(RcolorBrewer)
install.packages("RColorBrewer")
library(RColorBrewer)
world<- readShapePoly("continents.shp")
world<- readShapePoly("continent.shp")
wd = "C:\\Users\\sarah\\Documents\\GitHub\\experimental-rads"
#wd = "/Users/sarah/Desktop/WE_Dropbox_stuff/ExperimentalMacroecology/"
setwd(wd)
sites = read.csv("sites_analysis_data.csv", na.strings = 'NULL', colClasses = "character")
lat = as.numeric(sites$latitude)
lon = as.numeric(sites$longitude)
world<- readShapePoly("continent.shp")
install.packages(mapproj)
library(mapproj)
coord_map(projection = "mercator", orientation = NULL, xlim = NULL, ylim = NULL)
nz <- map_data("nz")
nzmap <- ggplot(nz, aes(x=long, y=lat, group=group)) +
geom_polygon(fill="white", colour="black")
# Use cartesian coordinates
nzmap
# With default mercator projection
nzmap + coord_map()
# Other projections
nzmap + coord_map("cylindrical")
nzmap + coord_map("azequalarea",orientation=c(-36.92,174.6,0))
nzmap + coord_map("azequalarea",orientation=c(-36.92,174.6,0))
world <- map_data("world")
nzmap <- ggplot(world, aes(x=long, y=lat, group=group)) +
geom_polygon(fill="white", colour="black")
nzmap
nzmap
nzmap + coord_map()
# Create a lat-long dataframe from the maps package
world <- map_data("world")
worldmap <- ggplot(world, aes(x=long, y=lat, group=group)) +
geom_polygon(fill="white", colour="black")
worldmap
worldmap + coord_map()
nzmap + coord_map("cylindrical")
worldmap + coord_map("cylindrical")
worldmap + coord_map("ortho")
points(lon, lat, col = "red", pch = 19)
geom_point(mapping = worldmap, lon, lat)
p = ggplot(worldmap, aes = c(lon, lat))
library(ggplot)
p = ggplot(worldmap, aes(lon, lat))
p = ggplot2(worldmap, aes(lon, lat))
p <- ggplot(worldmap, aes(lon, lat))
pts <- data.frame(x = lon, y = lat)
worldMap + geom_point(data = pts, aes(x, y, size = 1:11)) +
scale_size("Size")
worldmap + geom_point(data = pts, aes(x, y, size = 1:11)) +
scale_size("Size")
worldmap + cood_map() + geom_point(data = pts, aes(x, y))
worldmap + coord_map() + geom_point(data = pts, aes(x, y))
pointData <- data.frame(xx=lon,yy=lat,zz=1
worldMap <-ggplot(world) + geom_path(aes(x,y))
pointData <- data.frame(xx=lon,yy=lat,zz=1)
worldMap <-ggplot(world) + geom_path(aes(x,y))
worldMap+geom_point(data=pointData,aes(x=xx,y=yy,size=zz))
worldMap <-ggplot(world)
worldMap+geom_point(data=pointData,aes(x=xx,y=yy,size=zz))
worldMap <-ggplot(world)
worldMap <-ggplot(world) + geom_path(aes(lon, lat))
worldMap+geom_point(data=pointData,aes(x=xx,y=yy,size=zz))
worldMap <-ggplot(world) + geom_path(aes(x, y))
worldMap+geom_point(data=pointData,aes(x=xx,y=yy,size=zz))
worldMap <-ggplot(world) + geom_path(aes(colour = "green"))
worldMap+geom_point(data=pointData,aes(x=xx,y=yy,size=zz))
worldMap <-ggplot(world) + geom_path(aes(0, 0, colour = "green"))
worldMap+geom_point(data=pointData,aes(x=xx,y=yy,size=zz))
worldMap <-ggplot(world) + geom_path(aes(0, 0))
worldMap+geom_point(data=pointData,aes(x=xx,y=yy,size=zz))
worldMap <-ggplot(world) + geom_path(aes(0, 0))
pts <- data.frame(x = lon, y = lat)
worldMap + geom_point(data = pts, aes(x, y, size = 1:11)) +
scale_size(legend = FALSE)
length(lat)
length(lon)
length(size)
worldMap + geom_point(data = pts, aes(x, y))
worldMap
worldMap + coord_map()
world <- map_data("world")
worldmap <- ggplot(world, aes(x=long, y=lat, group=group)) +
geom_polygon(fill="white", colour="black")
# Use cartesian coordinates
worldmap
pts <- data.frame(x = lon, y = lat)
worldmap + geom_point(data = pts, aes(x, y))
worldmap + geom_point(data = pts, aes(x, y))
worldMap + geom_point(data = pts, aes(x, y))
world <- map_data("world")
worldmap <- ggplot(world, aes(x=lon, y=lat, group=group)) +
geom_polygon(fill="white", colour="black")
worldmap
world <- map_data("world")
worldmap <- ggplot(world, aes(x=long, y=lat, group=group)) +
geom_polygon(fill="white", colour="black")
# Use cartesian coordinates
worldmap
worldmap + coord_map()
worldmap + coord_map() + geom_point(data = pts, aes(x,y))
map("world", border = NA)
points(lon, lat, col = "red", pch = 19)
points(lon, lat, col = "red", pch = 19, na.rm = TRUE)
points(lon, lat, col = "indianred", pch = 19)
map("world", fill = "gray60")
map("world", col = "gray60")
points(lon, lat, col = "indianred", pch = 19)
map("world", col = "gray70")
map("world", col = "gray70")
map("world", col = "gray20")
map("world", col = "gray40")
map("world", col = "gray30")
points(lon, lat, col = "indianred", pch = 19)
axis(side = 1)
axis(side = 2)
