Cshape = append(Cshape, d$con)
Eshape = append(Eshape, d$exp)
}
else {      #if mean abundance, can't get the data, (needs integers)
Cshape = append(Cshape, "ERROR")
Eshape = append(Eshape, "ERROR")
}
#plot the compared data
RAD_plot(control, experiment, a1, a2, taxa)
# get summary statistics from comparisons
BCrad = append(BCrad, BCdist(abundMerge(relabund(a1), relabund(a2))))
BCS = append(BCS, BCdist(matrix(c(length(a1), length(a2)), nrow = 1, ncol = 2)))
BCN = append(BCN, BCdist(matrix(c(sum(a1),sum(a2)), nrow = 1, ncol = 2)))
BCcomp = append(BCcomp, BCdist(subset(comms[which(comms$siteID == control | comms$siteID == experiment),])))
percS = append(percS, ((length(a2) - length(a1))/(length(a1)))*100)
percN = append(percN, ((sum(a2) - sum(a1))/(sum(a1)))*100)
taxon = append(taxon, taxa)
etype = append(etype, type)
# record summary descriptive variables
refID = append(refID, ref)
cID = append(cID, control)
eID = append(eID, experiment)
CS = append(CS, length(a1))
CN = append(CN, sum(a1))
Jc = append(Jc, round(SimpE(comms[which(comms[,2] == control),]),2))
ES = append(ES, length(a2))
EN = append(EN, sum(a2))
Je = append(Je, round(SimpE(comms[which(comms[,2] == experiment),]),2))
}}}
dev.off()
pdf("allRADs.pdf", 2, 6, paper = "letter", pointsize = 10)
par(mfrow=c(7,5), , mar=c(1,2,3,1), oma=c(1,1,1,1)) #mar=c(3,1.5,2,0.5), oma=c(1.5,2,1,1))
#descriptive variables
refID = c()
cID = c()
eID = c()
Cshape = c()
Eshape = c()
CS = as.numeric()
CN = as.numeric()
Jc = as.numeric()
ES = as.numeric()
EN = as.numeric()
Je = as.numeric()
taxon = c()
etype = c()
# comparison variables
BCrad = as.numeric()
BCS = as.numeric()
BCN = as.numeric()
BCcomp = as.numeric()
percS = as.numeric()
percN = as.numeric()
for (iRow in 1:nrow(comps)){
control = comps[iRow,2]  #find control in pair
experiment = comps[iRow,3]  # find experiment in pair
taxa = as.character(expers[which(expers[,2]==control),7])# find taxonomic group from experiments table
type = as.character(expers[which(expers[,2]==control),4]) # find experiment type from experiments table
ref = as.character(comps[iRow,1])
# Check that < 10% of individuals are unidentified. If meets criteria, continue
if (percent_unidSpp(control, comms) == "OK" & percent_unidSpp(experiment, comms) == "OK"){
a1 = sort(as.numeric(comms[which(comms[,2] == control & comms[,7] != 0), 8])) #vector of control abundances
a2 = sort(as.numeric(comms[which(comms[,2] == experiment & comms[,7] != 0), 8])) #vector of exp abundances
# Check that there are at least 5 species and 30 individuals in each community, If yes, proceed.
if (length(a1) > 4 & length(a2) > 4 & sum(a1) > 29 & sum(a2) > 29){
# find categorical shapes (logseries vs. lognormal)
if(expers[which(expers[,2]==control),10] == 1) { #is it raw abundance data?
d = dist.test(a1, a2)
Cshape = append(Cshape, d$con)
Eshape = append(Eshape, d$exp)
}
else {      #if mean abundance, can't get the data, (needs integers)
Cshape = append(Cshape, "ERROR")
Eshape = append(Eshape, "ERROR")
}
#plot the compared data
RAD_plot(control, experiment, a1, a2, taxa)
# get summary statistics from comparisons
BCrad = append(BCrad, BCdist(abundMerge(relabund(a1), relabund(a2))))
BCS = append(BCS, BCdist(matrix(c(length(a1), length(a2)), nrow = 1, ncol = 2)))
BCN = append(BCN, BCdist(matrix(c(sum(a1),sum(a2)), nrow = 1, ncol = 2)))
BCcomp = append(BCcomp, BCdist(subset(comms[which(comms$siteID == control | comms$siteID == experiment),])))
percS = append(percS, ((length(a2) - length(a1))/(length(a1)))*100)
percN = append(percN, ((sum(a2) - sum(a1))/(sum(a1)))*100)
taxon = append(taxon, taxa)
etype = append(etype, type)
# record summary descriptive variables
refID = append(refID, ref)
cID = append(cID, control)
eID = append(eID, experiment)
CS = append(CS, length(a1))
CN = append(CN, sum(a1))
Jc = append(Jc, round(SimpE(comms[which(comms[,2] == control),]),2))
ES = append(ES, length(a2))
EN = append(EN, sum(a2))
Je = append(Je, round(SimpE(comms[which(comms[,2] == experiment),]),2))
}}}
dev.off()
pdf("allRADs.pdf", 2, 6, paper = "letter", pointsize = 10)
par(mfrow=c(7,5), mar=c(1,2,3,1), oma=c(1,1,1,1)) #mar=c(3,1.5,2,0.5), oma=c(1.5,2,1,1))
#descriptive variables
refID = c()
cID = c()
eID = c()
Cshape = c()
Eshape = c()
CS = as.numeric()
CN = as.numeric()
Jc = as.numeric()
ES = as.numeric()
EN = as.numeric()
Je = as.numeric()
taxon = c()
etype = c()
# comparison variables
BCrad = as.numeric()
BCS = as.numeric()
BCN = as.numeric()
BCcomp = as.numeric()
percS = as.numeric()
percN = as.numeric()
for (iRow in 1:nrow(comps)){
control = comps[iRow,2]  #find control in pair
experiment = comps[iRow,3]  # find experiment in pair
taxa = as.character(expers[which(expers[,2]==control),7])# find taxonomic group from experiments table
type = as.character(expers[which(expers[,2]==control),4]) # find experiment type from experiments table
ref = as.character(comps[iRow,1])
# Check that < 10% of individuals are unidentified. If meets criteria, continue
if (percent_unidSpp(control, comms) == "OK" & percent_unidSpp(experiment, comms) == "OK"){
a1 = sort(as.numeric(comms[which(comms[,2] == control & comms[,7] != 0), 8])) #vector of control abundances
a2 = sort(as.numeric(comms[which(comms[,2] == experiment & comms[,7] != 0), 8])) #vector of exp abundances
# Check that there are at least 5 species and 30 individuals in each community, If yes, proceed.
if (length(a1) > 4 & length(a2) > 4 & sum(a1) > 29 & sum(a2) > 29){
# find categorical shapes (logseries vs. lognormal)
if(expers[which(expers[,2]==control),10] == 1) { #is it raw abundance data?
d = dist.test(a1, a2)
Cshape = append(Cshape, d$con)
Eshape = append(Eshape, d$exp)
}
else {      #if mean abundance, can't get the data, (needs integers)
Cshape = append(Cshape, "ERROR")
Eshape = append(Eshape, "ERROR")
}
#plot the compared data
RAD_plot(control, experiment, a1, a2, taxa)
# get summary statistics from comparisons
BCrad = append(BCrad, BCdist(abundMerge(relabund(a1), relabund(a2))))
BCS = append(BCS, BCdist(matrix(c(length(a1), length(a2)), nrow = 1, ncol = 2)))
BCN = append(BCN, BCdist(matrix(c(sum(a1),sum(a2)), nrow = 1, ncol = 2)))
BCcomp = append(BCcomp, BCdist(subset(comms[which(comms$siteID == control | comms$siteID == experiment),])))
percS = append(percS, ((length(a2) - length(a1))/(length(a1)))*100)
percN = append(percN, ((sum(a2) - sum(a1))/(sum(a1)))*100)
taxon = append(taxon, taxa)
etype = append(etype, type)
# record summary descriptive variables
refID = append(refID, ref)
cID = append(cID, control)
eID = append(eID, experiment)
CS = append(CS, length(a1))
CN = append(CN, sum(a1))
Jc = append(Jc, round(SimpE(comms[which(comms[,2] == control),]),2))
ES = append(ES, length(a2))
EN = append(EN, sum(a2))
Je = append(Je, round(SimpE(comms[which(comms[,2] == experiment),]),2))
}}}
dev.off()
#open plotting pdf window
pdf("allRADs.pdf", 7, 10, paper = "letter", pointsize = 10)
par(mfrow=c(7,5), mar=c(1,2,3,1), oma=c(1,1,1,1))
#descriptive variables
refID = c()
cID = c()
eID = c()
Cshape = c()
Eshape = c()
CS = as.numeric()
CN = as.numeric()
Jc = as.numeric()
ES = as.numeric()
EN = as.numeric()
Je = as.numeric()
taxon = c()
etype = c()
# comparison variables
BCrad = as.numeric()
BCS = as.numeric()
BCN = as.numeric()
BCcomp = as.numeric()
percS = as.numeric()
percN = as.numeric()
for (iRow in 1:nrow(comps)){
control = comps[iRow,2]  #find control in pair
experiment = comps[iRow,3]  # find experiment in pair
taxa = as.character(expers[which(expers[,2]==control),7])# find taxonomic group from experiments table
type = as.character(expers[which(expers[,2]==control),4]) # find experiment type from experiments table
ref = as.character(comps[iRow,1])
# Check that < 10% of individuals are unidentified. If meets criteria, continue
if (percent_unidSpp(control, comms) == "OK" & percent_unidSpp(experiment, comms) == "OK"){
a1 = sort(as.numeric(comms[which(comms[,2] == control & comms[,7] != 0), 8])) #vector of control abundances
a2 = sort(as.numeric(comms[which(comms[,2] == experiment & comms[,7] != 0), 8])) #vector of exp abundances
# Check that there are at least 5 species and 30 individuals in each community, If yes, proceed.
if (length(a1) > 4 & length(a2) > 4 & sum(a1) > 29 & sum(a2) > 29){
# find categorical shapes (logseries vs. lognormal)
if(expers[which(expers[,2]==control),10] == 1) { #is it raw abundance data?
d = dist.test(a1, a2)
Cshape = append(Cshape, d$con)
Eshape = append(Eshape, d$exp)
}
else {      #if mean abundance, can't get the data, (needs integers)
Cshape = append(Cshape, "ERROR")
Eshape = append(Eshape, "ERROR")
}
#plot the compared data
RAD_plot(control, experiment, a1, a2, taxa)
# get summary statistics from comparisons
BCrad = append(BCrad, BCdist(abundMerge(relabund(a1), relabund(a2))))
BCS = append(BCS, BCdist(matrix(c(length(a1), length(a2)), nrow = 1, ncol = 2)))
BCN = append(BCN, BCdist(matrix(c(sum(a1),sum(a2)), nrow = 1, ncol = 2)))
BCcomp = append(BCcomp, BCdist(subset(comms[which(comms$siteID == control | comms$siteID == experiment),])))
percS = append(percS, ((length(a2) - length(a1))/(length(a1)))*100)
percN = append(percN, ((sum(a2) - sum(a1))/(sum(a1)))*100)
taxon = append(taxon, taxa)
etype = append(etype, type)
# record summary descriptive variables
refID = append(refID, ref)
cID = append(cID, control)
eID = append(eID, experiment)
CS = append(CS, length(a1))
CN = append(CN, sum(a1))
Jc = append(Jc, round(SimpE(comms[which(comms[,2] == control),]),2))
ES = append(ES, length(a2))
EN = append(EN, sum(a2))
Je = append(Je, round(SimpE(comms[which(comms[,2] == experiment),]),2))
}}}
dev.off()
#open plotting pdf window
pdf("allRADs.pdf", 7, 10, paper = "letter", pointsize = 10)
par(mfrow=c(6,4), mar=c(1,2,3,1), oma=c(1,1,1,1))
#descriptive variables
refID = c()
cID = c()
eID = c()
Cshape = c()
Eshape = c()
CS = as.numeric()
CN = as.numeric()
Jc = as.numeric()
ES = as.numeric()
EN = as.numeric()
Je = as.numeric()
taxon = c()
etype = c()
# comparison variables
BCrad = as.numeric()
BCS = as.numeric()
BCN = as.numeric()
BCcomp = as.numeric()
percS = as.numeric()
percN = as.numeric()
for (iRow in 1:nrow(comps)){
control = comps[iRow,2]  #find control in pair
experiment = comps[iRow,3]  # find experiment in pair
taxa = as.character(expers[which(expers[,2]==control),7])# find taxonomic group from experiments table
type = as.character(expers[which(expers[,2]==control),4]) # find experiment type from experiments table
ref = as.character(comps[iRow,1])
# Check that < 10% of individuals are unidentified. If meets criteria, continue
if (percent_unidSpp(control, comms) == "OK" & percent_unidSpp(experiment, comms) == "OK"){
a1 = sort(as.numeric(comms[which(comms[,2] == control & comms[,7] != 0), 8])) #vector of control abundances
a2 = sort(as.numeric(comms[which(comms[,2] == experiment & comms[,7] != 0), 8])) #vector of exp abundances
# Check that there are at least 5 species and 30 individuals in each community, If yes, proceed.
if (length(a1) > 4 & length(a2) > 4 & sum(a1) > 29 & sum(a2) > 29){
# find categorical shapes (logseries vs. lognormal)
if(expers[which(expers[,2]==control),10] == 1) { #is it raw abundance data?
d = dist.test(a1, a2)
Cshape = append(Cshape, d$con)
Eshape = append(Eshape, d$exp)
}
else {      #if mean abundance, can't get the data, (needs integers)
Cshape = append(Cshape, "ERROR")
Eshape = append(Eshape, "ERROR")
}
#plot the compared data
RAD_plot(control, experiment, a1, a2, taxa)
# get summary statistics from comparisons
BCrad = append(BCrad, BCdist(abundMerge(relabund(a1), relabund(a2))))
BCS = append(BCS, BCdist(matrix(c(length(a1), length(a2)), nrow = 1, ncol = 2)))
BCN = append(BCN, BCdist(matrix(c(sum(a1),sum(a2)), nrow = 1, ncol = 2)))
BCcomp = append(BCcomp, BCdist(subset(comms[which(comms$siteID == control | comms$siteID == experiment),])))
percS = append(percS, ((length(a2) - length(a1))/(length(a1)))*100)
percN = append(percN, ((sum(a2) - sum(a1))/(sum(a1)))*100)
taxon = append(taxon, taxa)
etype = append(etype, type)
# record summary descriptive variables
refID = append(refID, ref)
cID = append(cID, control)
eID = append(eID, experiment)
CS = append(CS, length(a1))
CN = append(CN, sum(a1))
Jc = append(Jc, round(SimpE(comms[which(comms[,2] == control),]),2))
ES = append(ES, length(a2))
EN = append(EN, sum(a2))
Je = append(Je, round(SimpE(comms[which(comms[,2] == experiment),]),2))
}}}
dev.off()
#--------------------------------------------------------------
#open plotting pdf window
pdf("allRADs.pdf", 7, 10, paper = "letter", pointsize = 10)
par(mfrow=c(5,3), mar=c(1,2,3,1), oma=c(1,1,1,1))
#descriptive variables
refID = c()
cID = c()
eID = c()
Cshape = c()
Eshape = c()
CS = as.numeric()
CN = as.numeric()
Jc = as.numeric()
ES = as.numeric()
EN = as.numeric()
Je = as.numeric()
taxon = c()
etype = c()
# comparison variables
BCrad = as.numeric()
BCS = as.numeric()
BCN = as.numeric()
BCcomp = as.numeric()
percS = as.numeric()
percN = as.numeric()
for (iRow in 1:nrow(comps)){
control = comps[iRow,2]  #find control in pair
experiment = comps[iRow,3]  # find experiment in pair
taxa = as.character(expers[which(expers[,2]==control),7])# find taxonomic group from experiments table
type = as.character(expers[which(expers[,2]==control),4]) # find experiment type from experiments table
ref = as.character(comps[iRow,1])
# Check that < 10% of individuals are unidentified. If meets criteria, continue
if (percent_unidSpp(control, comms) == "OK" & percent_unidSpp(experiment, comms) == "OK"){
a1 = sort(as.numeric(comms[which(comms[,2] == control & comms[,7] != 0), 8])) #vector of control abundances
a2 = sort(as.numeric(comms[which(comms[,2] == experiment & comms[,7] != 0), 8])) #vector of exp abundances
# Check that there are at least 5 species and 30 individuals in each community, If yes, proceed.
if (length(a1) > 4 & length(a2) > 4 & sum(a1) > 29 & sum(a2) > 29){
# find categorical shapes (logseries vs. lognormal)
if(expers[which(expers[,2]==control),10] == 1) { #is it raw abundance data?
d = dist.test(a1, a2)
Cshape = append(Cshape, d$con)
Eshape = append(Eshape, d$exp)
}
else {      #if mean abundance, can't get the data, (needs integers)
Cshape = append(Cshape, "ERROR")
Eshape = append(Eshape, "ERROR")
}
#plot the compared data
RAD_plot(control, experiment, a1, a2, taxa)
# get summary statistics from comparisons
BCrad = append(BCrad, BCdist(abundMerge(relabund(a1), relabund(a2))))
BCS = append(BCS, BCdist(matrix(c(length(a1), length(a2)), nrow = 1, ncol = 2)))
BCN = append(BCN, BCdist(matrix(c(sum(a1),sum(a2)), nrow = 1, ncol = 2)))
BCcomp = append(BCcomp, BCdist(subset(comms[which(comms$siteID == control | comms$siteID == experiment),])))
percS = append(percS, ((length(a2) - length(a1))/(length(a1)))*100)
percN = append(percN, ((sum(a2) - sum(a1))/(sum(a1)))*100)
taxon = append(taxon, taxa)
etype = append(etype, type)
# record summary descriptive variables
refID = append(refID, ref)
cID = append(cID, control)
eID = append(eID, experiment)
CS = append(CS, length(a1))
CN = append(CN, sum(a1))
Jc = append(Jc, round(SimpE(comms[which(comms[,2] == control),]),2))
ES = append(ES, length(a2))
EN = append(EN, sum(a2))
Je = append(Je, round(SimpE(comms[which(comms[,2] == experiment),]),2))
}}}
dev.off()
#open plotting pdf window
pdf("allRADs.pdf", 7, 10, paper = "letter", pointsize = 10)
par(mfrow=c(5,4), mar=c(1,2,3,1), oma=c(1,1,1,1))
#descriptive variables
refID = c()
cID = c()
eID = c()
Cshape = c()
Eshape = c()
CS = as.numeric()
CN = as.numeric()
Jc = as.numeric()
ES = as.numeric()
EN = as.numeric()
Je = as.numeric()
taxon = c()
etype = c()
# comparison variables
BCrad = as.numeric()
BCS = as.numeric()
BCN = as.numeric()
BCcomp = as.numeric()
percS = as.numeric()
percN = as.numeric()
for (iRow in 1:nrow(comps)){
control = comps[iRow,2]  #find control in pair
experiment = comps[iRow,3]  # find experiment in pair
taxa = as.character(expers[which(expers[,2]==control),7])# find taxonomic group from experiments table
type = as.character(expers[which(expers[,2]==control),4]) # find experiment type from experiments table
ref = as.character(comps[iRow,1])
# Check that < 10% of individuals are unidentified. If meets criteria, continue
if (percent_unidSpp(control, comms) == "OK" & percent_unidSpp(experiment, comms) == "OK"){
a1 = sort(as.numeric(comms[which(comms[,2] == control & comms[,7] != 0), 8])) #vector of control abundances
a2 = sort(as.numeric(comms[which(comms[,2] == experiment & comms[,7] != 0), 8])) #vector of exp abundances
# Check that there are at least 5 species and 30 individuals in each community, If yes, proceed.
if (length(a1) > 4 & length(a2) > 4 & sum(a1) > 29 & sum(a2) > 29){
# find categorical shapes (logseries vs. lognormal)
if(expers[which(expers[,2]==control),10] == 1) { #is it raw abundance data?
d = dist.test(a1, a2)
Cshape = append(Cshape, d$con)
Eshape = append(Eshape, d$exp)
}
else {      #if mean abundance, can't get the data, (needs integers)
Cshape = append(Cshape, "ERROR")
Eshape = append(Eshape, "ERROR")
}
#plot the compared data
RAD_plot(control, experiment, a1, a2, taxa)
# get summary statistics from comparisons
BCrad = append(BCrad, BCdist(abundMerge(relabund(a1), relabund(a2))))
BCS = append(BCS, BCdist(matrix(c(length(a1), length(a2)), nrow = 1, ncol = 2)))
BCN = append(BCN, BCdist(matrix(c(sum(a1),sum(a2)), nrow = 1, ncol = 2)))
BCcomp = append(BCcomp, BCdist(subset(comms[which(comms$siteID == control | comms$siteID == experiment),])))
percS = append(percS, ((length(a2) - length(a1))/(length(a1)))*100)
percN = append(percN, ((sum(a2) - sum(a1))/(sum(a1)))*100)
taxon = append(taxon, taxa)
etype = append(etype, type)
# record summary descriptive variables
refID = append(refID, ref)
cID = append(cID, control)
eID = append(eID, experiment)
CS = append(CS, length(a1))
CN = append(CN, sum(a1))
Jc = append(Jc, round(SimpE(comms[which(comms[,2] == control),]),2))
ES = append(ES, length(a2))
EN = append(EN, sum(a2))
Je = append(Je, round(SimpE(comms[which(comms[,2] == experiment),]),2))
}}}
dev.off()
#open plotting pdf window
pdf("allRADs_300.pdf", 7, 10, paper = "letter", pointsize = 10)
par(mfrow=c(5,4), mar=c(1,2,3,1), oma=c(1,1,1,1))
#descriptive variables
refID = c()
cID = c()
eID = c()
Cshape = c()
Eshape = c()
CS = as.numeric()
CN = as.numeric()
Jc = as.numeric()
ES = as.numeric()
EN = as.numeric()
Je = as.numeric()
taxon = c()
etype = c()
# comparison variables
BCrad = as.numeric()
BCS = as.numeric()
BCN = as.numeric()
BCcomp = as.numeric()
percS = as.numeric()
percN = as.numeric()
for (iRow in 1:nrow(comps)){
control = comps[iRow,2]  #find control in pair
experiment = comps[iRow,3]  # find experiment in pair
taxa = as.character(expers[which(expers[,2]==control),7])# find taxonomic group from experiments table
type = as.character(expers[which(expers[,2]==control),4]) # find experiment type from experiments table
ref = as.character(comps[iRow,1])
# Check that < 10% of individuals are unidentified. If meets criteria, continue
if (percent_unidSpp(control, comms) == "OK" & percent_unidSpp(experiment, comms) == "OK"){
a1 = sort(as.numeric(comms[which(comms[,2] == control & comms[,7] != 0), 8])) #vector of control abundances
a2 = sort(as.numeric(comms[which(comms[,2] == experiment & comms[,7] != 0), 8])) #vector of exp abundances
# Check that there are at least 5 species and 30 individuals in each community, If yes, proceed.
if (length(a1) > 4 & length(a2) > 4 & sum(a1) > 299 & sum(a2) > 299){
# find categorical shapes (logseries vs. lognormal)
if(expers[which(expers[,2]==control),10] == 1) { #is it raw abundance data?
d = dist.test(a1, a2)
Cshape = append(Cshape, d$con)
Eshape = append(Eshape, d$exp)
}
else {      #if mean abundance, can't get the data, (needs integers)
Cshape = append(Cshape, "ERROR")
Eshape = append(Eshape, "ERROR")
}
#plot the compared data
RAD_plot(control, experiment, a1, a2, taxa)
# get summary statistics from comparisons
BCrad = append(BCrad, BCdist(abundMerge(relabund(a1), relabund(a2))))
BCS = append(BCS, BCdist(matrix(c(length(a1), length(a2)), nrow = 1, ncol = 2)))
BCN = append(BCN, BCdist(matrix(c(sum(a1),sum(a2)), nrow = 1, ncol = 2)))
BCcomp = append(BCcomp, BCdist(subset(comms[which(comms$siteID == control | comms$siteID == experiment),])))
percS = append(percS, ((length(a2) - length(a1))/(length(a1)))*100)
percN = append(percN, ((sum(a2) - sum(a1))/(sum(a1)))*100)
taxon = append(taxon, taxa)
etype = append(etype, type)
# record summary descriptive variables
refID = append(refID, ref)
cID = append(cID, control)
eID = append(eID, experiment)
CS = append(CS, length(a1))
CN = append(CN, sum(a1))
Jc = append(Jc, round(SimpE(comms[which(comms[,2] == control),]),2))
ES = append(ES, length(a2))
EN = append(EN, sum(a2))
Je = append(Je, round(SimpE(comms[which(comms[,2] == experiment),]),2))
}}}
dev.off()
